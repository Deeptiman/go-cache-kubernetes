sudo umount -fl /dev/sdb . 

sudo mkfs.ext4 -m 0 -E lazy_itable_init=0,lazy_journal_init=0,discard -F /dev/sdb


mongod-0.mongodb-service.default.svc.cluster.local

rs.initiate({_id: "MainRepSet", version: 1, members: [
       { _id: 0, host : "mongod-0.mongodb-service.default.svc.cluster.local:27017" }
]});

db.getSiblingDB("admin").createUser({
      user : "admin",
      pwd  : "admin123",
      roles: [ { role: "root", db: "admin" } ]
});


kubectl run mongo --image=mongo --port=27017

//kubectl create secret generic mongosecret --from-literal='username=admin' --from-literal='password=admin123'

kubectl exec mongod-0 -c mongod-container -- mongo --eval 'rs.initiate({_id: "MainRepSet", version: 1, members: [ {_id: 0, host: "mongod-0.mongodb-service.default.svc.cluster.local:27017"} ]});'


kubectl exec mongod-0 -c mongod-container -- mongo --eval 'db.getSiblingDB("admin").createUser({user:"admin",pwd:"admin123",roles:[{role:"root",db:"admin"}]});'



##Redis
https://redislabs.com/blog/multi-model-redis-database-minikube-developers/

/etc/init.d/redis-server restart

docker rm -fv $(docker ps -aq)

sudo lsof -ti:6379

docker rmi go-cache-kubernetes-v1 --force

docker build -v ${PWD}/deploy_kubernetes/secrets/:/secrets -t go-cache-kubernetes-v1 .

docker tag go-cache-kubernetes-v1 deeptiman1991/go-cache-kubernetes-v1:1.0.0

docker login

docker push deeptiman1991/go-cache-kubernetes-v1:1.0.0

